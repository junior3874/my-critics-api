datasource db {
  url      = env("DATABASE_URL")
  provider = "postgresql"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id              Int        @id @default(autoincrement())
  email           String
  username        String
  imageProfileUrl String
  password        String
  name            String
  Upvotes         Upvote[]
  Feedbacks       Feedback[]
  Comments        Comment[]
}

model Feedback {
  id             String    @id
  userId         Int
  Comments       Comment[]
  Upvotes        Upvote[]
  message        String
  musicOrAlbumId String
  type           String

  userOwner User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Comment {
  id         String @id
  userId     Int
  feedbackId String

  Upvotes Upvote[]

  userOwner User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  Feedback  Feedback @relation(fields: [feedbackId], references: [id], onDelete: Cascade)
}

model Upvote {
  id         Int     @id @default(autoincrement())
  type       Boolean
  userId     Int
  commentId  String?
  feedbackId String?

  userOwner             User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  upvoteBelongsComment  Comment?  @relation(fields: [commentId], references: [id], onDelete: Cascade)
  upvoteBelongsFeedback Feedback? @relation(fields: [feedbackId], references: [id], onDelete: Cascade)
}
